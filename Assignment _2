ANSWER 1
def pascal_triangle(n):
    for i in range(n):
        print(" " * (n - i), end="")  
        num = 1
        for j in range(i + 1):
            print(num, end=" ")  
            num = num * (i - j) // (j + 1) 
        print()  
pascal_triangle(5)

ANSWER 2
The continue statement in a loop skips the remaining code in the current iteration and moves to the next iteration. It is useful when certain conditions need to be avoided while iterating.
numlist = [0,1,2,3,4,5,6,7,8,9]
for x in numlist:
    if (x % 3 != 0):
        continue
    print(x) 

ANSWER 3
triplets = [(a, b, c) for a in range(1, 51) for b in range(a, 51) for c in range(b, 51) if a*a + b*b == c*c]
print(triplets)

ANSWER 4
def max_consecutive_sum(nums, k):
    max_sum = sum(nums[:k])
    current_sum = max_sum
    for i in range(len(nums) - k):
        current_sum = current_sum - nums[i] + nums[i + k]
        max_sum = max(max_sum, current_sum)
    return max_sum
print(max_consecutive_sum([199, 2, 3, 4, 5, 6, 7, 15, 9], 3))

ANSWER 5
def modify_list(lst):
    lst.append(100)
    print("Inside function:", lst)

my_list = [1, 2, 3]
modify_list(my_list)
print("Outside function:", my_list)

ANSWER 6
Fibonacci Sequence Using User-defined function
def fibonacci(n):
    fib_series = [0, 1]
    for _ in range(n - 2):
        fib_series.append(fib_series[-1] + fib_series[-2])
    return fib_series[:n]

num = int(input("Enter number of terms: "))
print(fibonacci(num))
